package com.poomoo.edao.adapter;import java.util.HashMap;import java.util.List;import com.poomoo.edao.R;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.LinearLayout;import android.widget.TextView;/** *  * @ClassName RegistrationSpinnerAdapter * @Description TODO 注册界面下拉菜单适配器 * @author 李苜菲 * @date 2015-7-30 上午11:08:39 */public class RegistrationSpinnerAdapter extends BaseAdapter {	LayoutInflater inflater;	Context context;	List<HashMap<String, String>> list;	public RegistrationSpinnerAdapter(Context context,			List<HashMap<String, String>> list) {		super();		this.context = context;		this.list = list;		inflater = LayoutInflater.from(context);	}	@Override	public int getCount() {		// TODO Auto-generated method stub		return list.size();	}	@Override	public Object getItem(int position) {		// TODO Auto-generated method stub		return list.get(position);	}	@Override	public long getItemId(int position) {		// TODO Auto-generated method stub		return position;	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		ViewHolder viewHolder = null;		if (convertView == null) {			convertView = inflater.inflate(R.layout.myspinner_dropdown_item,					null);			viewHolder = new ViewHolder();			viewHolder.layout = (LinearLayout) convertView					.findViewById(R.id.myspinner_dropdown_layout);			viewHolder.textView = (TextView) convertView					.findViewById(R.id.myspinner_dropdown_textView);			convertView.setTag(viewHolder);		} else {			viewHolder = (ViewHolder) convertView.getTag();		}		// if(list.size() == position+1){		// viewHolder.layout.setBackgroundResource(R.drawable.preference_last_item);		// }else{		// viewHolder.layout.setBackgroundResource(R.drawable.preference_item);		// }		viewHolder.textView.setText(list.get(position).get("name"));		return convertView;	}	public class ViewHolder {		LinearLayout layout;		TextView textView;	}	// public void refresh(List<HashMap<String, String>> l) {	// this.list.clear();	// list.addAll(l);	// notifyDataSetChanged();	// }	//	// public void add(HashMap<String, String> hashMap) {	// list.add(hashMap);	// notifyDataSetChanged();	// }	//	// public void add(ArrayList<HashMap<String, String>> str) {	// list.addAll(str);	// notifyDataSetChanged();	//	// }}